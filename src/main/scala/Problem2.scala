
object Problem2 extends App {

  /*
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

  solution 4613732
   */

  lazy val fibonacci_raro: Stream[Int] = 0 #::
    1 #::
    fibonacci_raro.zip(fibonacci_raro.tail).map {
      n => n._1 + n._2
    }

  def fibonacci( until: Int ) = {
    def fib( f1: Int, f2: Int, ret: List[Int] ) : List[Int] = {
      val f = f1 + f2
      if( f <= until ) fib( f2, f, f:: ret )
      else ret
    }

    fib( 0, 1, 0::1::Nil ).reverse
  }

  val fibonnacciUnder4000000AndEven = fibonacci(4000000).filter(_ % 2 == 1)
  val solution = fibonnacciUnder4000000AndEven.sum
  println(s"Solution: $solution")


}
