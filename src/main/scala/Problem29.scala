import scala.annotation.tailrec

object Problem29 extends App{
/*
Consider all integer combinations of ab for 2 = a = 5 and 2 = b = 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 = a = 100 and 2 = b = 100?
*/
  
  
  val max = 5
  val min = 2

  val table = new Array[Int](max+1)
  def remove(a: Int){
    def r(p: Int) : Unit = if( p <= max ){
      table(p) = a
      r(p*a)
    }
    r(a)
    //println( s"  remove $a -> ${table.mkString(",")}" );
  }
  
  val values = for( a <- min to max ) yield {
    val count = if( table(a) != 0 ){
      val minus = (max*Math.log(table(a))/Math.log(a)).toInt
      println( s"  $a -> a previous power ${table(a)} -> minus:$minus" )
      max - min -  minus + 1
    }
    else{
      println( s"  $a -> not a previous power" )
      max - min  + 1
    }
    remove(a)
    println( s"$a -> $count" )
    count
  }
  
  val solution = values.sum
  
  println( s"Solution:$solution" )

}
  

